version: "3.9"
services:

  frontend:
    build:
      context: frontend
      dockerfile: node/Dockerfile
    ports:
      - "80:8080"
    environment:
      WDS_SOCKET_PORT: 0
    command: sh -c "npm run dev"
    volumes:
      - ../frontend:/app
      - ./.env:/config/.env
    tty: true
    networks:
      - app-network

  node-cli:
    build:
      context: frontend
      dockerfile: node/Dockerfile
    volumes:
      - ../frontend:/app
      - ./.env:/config/.env
    networks:
      - app-network

  backend:
    image: nginx:1.23-alpine
    depends_on:
      - php-fpm
    ports:
      - '8080:80'
    links:
      - php-fpm
    volumes:
      - ../backend:/app
      - ./backend/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend/nginx/logs:/var/log/nginx
      - ./.env:/config/.env
    networks:
      - app-network

  php-fpm:
    build: backend/php-fpm
    volumes:
      - ../backend:/app
      - ./.env:/config/.env
    ports:
      - "9000:9000"
    networks:
      - app-network

  php-cli:
    build:
      context: backend/php-cli
    volumes:
      - ../backend:/app
      - ./.env:/config/.env
    networks:
      - app-network

  mysql:
    image: mariadb:10.5.8
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASS}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ./data/db:/var/lib/mysql
      - ./data/dump:/docker-entrypoint-initdb.d
    ports:
      - 3096:3306
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 8000:80
    environment:
      - PMA_USER=${MYSQL_USER}
      - PMA_PASSWORD=${MYSQL_PASS}
      - PMA_HOST=${MYSQL_HOST}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge